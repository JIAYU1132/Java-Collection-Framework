//        在一个小镇里，按从 1 到 N 标记了 N 个人。传言称，这些人中有一个是小镇上的秘密法官。
//        如果小镇的法官真的存在，那么：
//        小镇的法官不相信任何人。
//        每个人（除了小镇法官外）都信任小镇的法官。
//        只有一个人同时满足属性 1 和属性 2 。
//        给定数组 trust，该数组由信任对 trust[i] = [a, b] 组成，表示标记为 a 的人信任标记为 b 的人。
//        如果小镇存在秘密法官并且可以确定他的身份，请返回该法官的标记。否则，返回 -1。


class Solution {
//     法官不相信任何人，说明法官不存在出度
//     所有人都信任法官，说明法官的入度为N-1
//     那么法官的出度加入度为N-1

     public int findJudge(int N, int[][] trust) {
         // 先统计出入度
         int[] arr = new int[N + 1];
         for (int[] index : trust) {
             arr[index[0]]--; // 出度--
             arr[index[1]]++; // 入度++
         }
         // 遍历一遍, 找到度为 N - 1 的元素, 返回
         for (int i = 1; i <= N; i++) {
             if (arr[i] == N-1) {
                 return i;
             }
         }
         return -1;
     }
}

